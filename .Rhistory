for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, .5)
Y1 <- rnorm(30, 3, .5)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(-3, 4, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
kable(result)
set.seed(1)
samples <- c()
assignment <- rep(0:1, 15)
for(i in 1:500) {
permutation <- sample(assignment)
samples <- c(samples, list(permutation))
}
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2]) - candidate
return(diff)
}
calcPvalue <- function(df, samples, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, .5)
Y1 <- rnorm(30, 3, .5)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(-4, 4, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
kable(result)
set.seed(1)
samples <- c()
assignment <- rep(0:1, 15)
for(i in 1:500) {
permutation <- sample(assignment)
samples <- c(samples, list(permutation))
}
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2]) - candidate
return(diff)
}
calcPvalue <- function(df, samples, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, .5)
Y1 <- rnorm(30, 3, .5)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(-3, 1, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
kable(result)
set.seed(1)
samples <- c()
assignment <- rep(0:1, 15)
for(i in 1:500) {
permutation <- sample(assignment)
samples <- c(samples, list(permutation))
}
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2]) - candidate
return(diff)
}
calcPvalue <- function(df, samples, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, .5)
Y1 <- rnorm(30, 3, .5)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(0, 4, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
kable(result)
set.seed(1)
samples <- c()
assignment <- rep(0:1, 15)
for(i in 1:500) {
permutation <- sample(assignment)
samples <- c(samples, list(permutation))
}
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2]) - candidate
return(diff)
}
calcPvalue <- function(df, samples, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, .5)
Y1 <- rnorm(30, 3, .5)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(0, 10, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
kable(result)
set.seed(1)
samples <- c()
assignment <- rep(0:1, 15)
for(i in 1:500) {
permutation <- sample(assignment)
samples <- c(samples, list(permutation))
}
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2]) - candidate
return(diff)
}
calcPvalue <- function(df, samples, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, 1)
Y1 <- rnorm(30, 3, 1)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(0, 4, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
kable(result)
library("DT", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
set.seed(1)
samples <- c()
assignment <- rep(0:1, 15)
for(i in 1:500) {
permutation <- sample(assignment)
samples <- c(samples, list(permutation))
}
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2]) - candidate
return(diff)
}
calcPvalue <- function(df, samples, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, 1)
Y1 <- rnorm(30, 3, 1)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(0, 4, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
datatable(result)
set.seed(1)
samples <- c()
assignment <- rep(0:1, 15)
for(i in 1:500) {
permutation <- sample(assignment)
samples <- c(samples, list(permutation))
}
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2]) - candidate
return(diff)
}
calcPvalue <- function(df, samples, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(samples)) {
df$W <- samples[[j]]
df$`Y(1)` <- ifelse(df$W == 0, df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(df$W == 1, df$`Y(1)` - candidate, df$`Y(0)`)
testStats <- c(testStats, calcTest(df, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(pvalue)
}
calcAll <- function(df, samples, treatment, candidates) {
pvalues <- data.frame(Candidate <- c(), Pvalue <- c())
for (i in 1:length(candidates)) {
pvalue  <- calcPvalue(df, samples, treatment, candidates[i])
pvalues <- rbind(pvalues, c(candidates[i], pvalue))
}
return(pvalues)
}
Y0 <- rnorm(30, 0, 1)
Y1 <- rnorm(30, 3, 1)
units <- 1:30
treatment <- rep(c(0, 1), 15)
df <- data.frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
candidates <- seq(-1, 3, .2)
result <- calcAll(df, samples, treatment, candidates)
colnames(result) <- c("Hypothetical Difference", "P-value in Sample")
datatable(result)
library(knitr)
library(dplyr)
library(kableExtra)
library(magrittr)
options(knitr.table.format = "html")
set.seed(1)
makeDF <- function(units) {
len <- units
Y0 <- rnorm(units, 0, 1)
Y0[1:(len/2)] <- NA
Y1 <- rnorm(units, 3, 1)
Y1[((len/2)+1):len] <- NA
units <- 1:len
treatment <- c(rep(0, len))
treatment[1: len/2] <- 1
df <- data_frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
return(df)
}
potential_treatments <- c()
combinations <- function(n)
expand.grid(rep(list(0:1),n))
comb <- combinations(14)
comb$sum <- rowSums(comb)
treatments <- subset(comb, comb$sum == 7)
treatments <- treatments[,1:14]
for (i in 1:nrow(treatments)) {
potential_treatments <- c(potential_treatments, list(t(treatments[i,])))
}
print(length(potential_treatments))
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2] - candidate)
return(diff)
}
calcPvalue <- function(df, potential_treatments, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(is.na(df$`Y(1)`), df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(is.na(df$`Y(0)`), df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(potential_treatments)) {
df2 <- df
df2$W <- potential_treatments[[j]]
df2$`Y(1)` <- ifelse(is.na(df2$`Y(1)`), df2$`Y(0)` + candidate, df2$`Y(1)`)
df2$`Y(0)` <- ifelse(is.na(df2$`Y(0)`), df2$`Y(1)` - candidate, df2$`Y(0)`)
testStats <- c(testStats, calcTest(df2, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(c(observed, pvalue))
}
calcAll <- function(units, potential_treatments, treatment, hypothetical_differences) {
pvalues <- data_frame(Candidate = c(1), Observed = c(2), Pvalue = c(3))
df <- makeDF(units)
for (i in 1:length(hypothetical_differences)) {
pvalue  <- calcPvalue(df, potential_treatments, treatment, hypothetical_differences[i])
pvalues <- rbind(pvalues, c(hypothetical_differences[i], pvalue[1], pvalue[2]))
}
return(pvalues)
}
hypothetical_differences <- seq(-4, 4, .5)
treatment <- c(rep(0, 14))
treatment[1:7] <- 1
result <- calcAll(14, potential_treatments, treatment, hypothetical_differences)
colnames(result) <- c("Hypothetical Difference", "Observed TestStat", "P-value in Sample")
df <- makeDF(14)
observed <- kable(head(df, 14), "html") %>% kable_styling()
observed
hypotheses <- kable(result[2:nrow(result), ], "html") %>% kable_styling()
hypotheses
blogdown::build_site()
setwd("~/GoWorkspace/src/code/HugoSite/website-hugo")
blogdown::build_site()
blogdown::build_site()
library(knitr)
library(dplyr)
library(kableExtra)
library(magrittr)
options(knitr.table.format = "html")
set.seed(1)
makeDF <- function(units) {
len <- units
Y0 <- rnorm(units, 0, 1)
Y0[1:(len/2)] <- NA
Y1 <- rnorm(units, 3, 1)
Y1[((len/2)+1):len] <- NA
units <- 1:len
treatment <- c(rep(0, len))
treatment[1: len/2] <- 1
df <- data_frame(units, Y0, Y1, treatment)
colnames(df) <- c("unit", "Y(0)", "Y(1)", "W")
return(df)
}
potential_treatments <- c()
combinations <- function(n)
expand.grid(rep(list(0:1),n))
comb <- combinations(14)
comb$sum <- rowSums(comb)
treatments <- subset(comb, comb$sum == 7)
treatments <- treatments[,1:14]
for (i in 1:nrow(treatments)) {
potential_treatments <- c(potential_treatments, list(t(treatments[i,])))
}
print(length(potential_treatments))
calcTest <- function(df, candidate) {
AvgT <- aggregate(`Y(1)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
AvgC <- aggregate(`Y(0)` ~ W, df, mean)
AvgT <- as.matrix(AvgT)
diff <- abs(AvgT[2, 2] - AvgC[1, 2] - candidate)
return(diff)
}
calcPvalue <- function(df, potential_treatments, treatment, candidate) {
df$W <- treatment
df$`Y(1)` <- ifelse(is.na(df$`Y(1)`), df$`Y(0)` + candidate, df$`Y(1)`)
df$`Y(0)` <- ifelse(is.na(df$`Y(0)`), df$`Y(1)` - candidate, df$`Y(0)`)
observed <- calcTest(df, candidate)
testStats <- c()
for (j in 1:length(potential_treatments)) {
df2 <- df
df2$W <- potential_treatments[[j]]
df2$`Y(1)` <- ifelse(is.na(df2$`Y(1)`), df2$`Y(0)` + candidate, df2$`Y(1)`)
df2$`Y(0)` <- ifelse(is.na(df2$`Y(0)`), df2$`Y(1)` - candidate, df2$`Y(0)`)
testStats <- c(testStats, calcTest(df2, candidate))
}
pvalue <- length(testStats[testStats >= observed]) / length(testStats)
return(c(observed, pvalue))
}
calcAll <- function(units, potential_treatments, treatment, hypothetical_differences) {
pvalues <- data_frame(Candidate = c(1), Observed = c(2), Pvalue = c(3))
df <- makeDF(units)
for (i in 1:length(hypothetical_differences)) {
pvalue  <- calcPvalue(df, potential_treatments, treatment, hypothetical_differences[i])
pvalues <- rbind(pvalues, c(hypothetical_differences[i], pvalue[1], pvalue[2]))
}
return(pvalues)
}
hypothetical_differences <- seq(-4, 4, .2)
treatment <- c(rep(0, 14))
treatment[1:7] <- 1
result <- calcAll(14, potential_treatments, treatment, hypothetical_differences)
colnames(result) <- c("Hypothetical Difference", "Observed TestStat", "P-value in Sample")
df <- makeDF(14)
observed <- kable(head(df, 14), "html") %>% kable_styling()
observed
